#!/usr/bin/env ruby

require 'date'
require 'money'
require_relative '../lib/weekly_transfer'
require_relative '../lib/monthly_transfer'
require_relative '../lib/transaction'
require_relative '../lib/investment'
require_relative '../lib/bank_account'
require_relative '../lib/financial_situation'
require_relative '../lib/simulate_day'

Money.use_i18n = false

calculate_until = Date.today + 150 + 365

bank_account = BankAccount.new
bank_account.add_transaction(Transaction.new(date: Date.today + 150, amount: Money.new(1000 * 100)))

investment = Investment.new(typical_annual_growth: 10)
investment.add_transaction(Transaction.new(date: Date.today, amount: Money.new(1000 * 100)))

regular_investment = MonthlyTransfer.new(
  amount: Money.new(100 * 100),
  schedule_from: Date.today
)
investment.add_repeated_transfer(regular_investment)

regular_weekly_bank = WeeklyTransfer.new(
  amount: Money.new(10 * 100),
  schedule_from: Date.today
)
bank_account.add_repeated_transfer(regular_weekly_bank)

current_situation = FinancialSituation.new(
  day: Date.today,
  assets: [bank_account, investment]
)

while (current_situation.day < calculate_until) do
  current_situation = SimulateDay.new(
    for_day: current_situation.day + 1,
    current_situation: current_situation
  ).run

  puts "#{current_situation.day.iso8601} Bank: #{current_situation.value_of(bank_account).format}, Investment: #{current_situation.value_of(investment).format}, Total: #{current_situation.total_assets.format}"
end